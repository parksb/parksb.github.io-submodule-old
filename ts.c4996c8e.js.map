{"version":3,"sources":["../node_modules/github-calendar-legend/lib/index.js","../node_modules/github-calendar-parser/lib/index.js","../node_modules/iterate-object/lib/index.js","../node_modules/sliced/index.js","../node_modules/elly/lib/index.js","../node_modules/add-subtract-date/lib/index.js","../node_modules/months/index.js","../node_modules/days/index.js","../node_modules/fillo/lib/index.js","../node_modules/regex-escape/lib/index.js","../node_modules/parse-it/lib/index.js","../node_modules/formatoid/lib/index.js","../node_modules/github-calendar/lib/index.js","src/ts/index.ts"],"names":["module","exports","abbr","it","de","en","short","fr","es"],"mappings":"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","file":"ts.c4996c8e.js","sourceRoot":"..\\app","sourcesContent":["\"use strict\";\n\nmodule.exports = [\"#eee\", \"#d6e685\", \"#8cc665\", \"#44a340\", \"#1e6823\"];","\"use strict\";\n\nvar githubCalendarLegend = require(\"github-calendar-legend\");\n\n/**\n * parseGitHubCalendarSvg\n * Parses the SVG input (as string).\n *\n * @name parseGitHubCalendarSvg\n * @function\n * @param {String} input The SVG code of the contributions calendar.\n * @return {Object} An object containing:\n *\n *  - `last_year` (Number): The total contributions in the last year.\n *  - `longest_streak` (Number): The longest streak.\n *  - `longest_streak_range` (Array): An array of two date objects representing the date range.\n *  - `current_streak` (Number): The current streak.\n *  - `current_streak_range` (Array): An array of two date objects representing the date range.\n *  - `days` (Array): An array of day objects:\n *       - `fill` (String): The hex color.\n *       - `date` (Date): The day date.\n *       - `count` (Number): The number of commits.\n *       - `level` (Number): A number between 0 and 4 (inclusive) representing the contribution level (more commits, higher value).\n *  - `weeks` (Array): The day objects grouped by weeks (arrays).\n *  - `last_contributed` (Date): The last contribution date.\n */\nmodule.exports = function parseGitHubCalendarSvg(input) {\n\n    var data = {\n        last_year: 0,\n        longest_streak: -1,\n        longest_streak_range: [],\n        current_streak: 0,\n        current_streak_range: [],\n        weeks: [],\n        days: [],\n        last_contributed: null\n    },\n        lastWeek = [],\n        updateLongestStreak = function updateLongestStreak() {\n        if (data.current_streak > data.longest_streak) {\n            data.longest_streak = data.current_streak;\n            data.longest_streak_range[0] = data.current_streak_range[0];\n            data.longest_streak_range[1] = data.current_streak_range[1];\n        }\n    };\n\n    input.split(\"\\n\").slice(2).map(function (c) {\n        return c.trim();\n    }).forEach(function (c) {\n        if (c.startsWith(\"<g transform\")) {\n            return lastWeek.length && data.weeks.push(lastWeek) && (lastWeek = []);\n        }\n\n        var fill = c.match(/fill=\"(#[a-z0-9]+)\"/),\n            date = c.match(/data-date=\"([0-9\\-]+)\"/),\n            count = c.match(/data-count=\"([0-9]+)\"/),\n            level = null;\n\n        fill = fill && fill[1];\n        date = date && date[1];\n        count = count && +count[1];\n\n        if (!fill) {\n            return;\n        }\n\n        var obj = {\n            fill: fill,\n            date: new Date(date),\n            count: count,\n            level: githubCalendarLegend.indexOf(fill)\n        };\n\n        if (data.current_streak === 0) {\n            data.current_streak_range[0] = obj.date;\n        }\n\n        if (obj.count) {\n            ++data.current_streak;\n            data.last_year += obj.count;\n            data.last_contributed = obj.date;\n            data.current_streak_range[1] = obj.date;\n        } else {\n            updateLongestStreak();\n            data.current_streak = 0;\n        }\n\n        lastWeek.push(obj);\n        data.days.push(obj);\n    });\n\n    updateLongestStreak();\n\n    return data;\n};","\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * iterateObject\n * Iterates an object. Note the object field order may differ.\n *\n * @name iterateObject\n * @function\n * @param {Object} obj The input object.\n * @param {Function} fn A function that will be called with the current value, field name and provided object.\n * @return {Function} The `iterateObject` function.\n */\nfunction iterateObject(obj, fn) {\n    var i = 0,\n        keys = [];\n\n    if (Array.isArray(obj)) {\n        for (; i < obj.length; ++i) {\n            if (fn(obj[i], i, obj) === false) {\n                break;\n            }\n        }\n    } else if ((typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj)) === \"object\" && obj !== null) {\n        keys = Object.keys(obj);\n        for (; i < keys.length; ++i) {\n            if (fn(obj[keys[i]], keys[i], obj) === false) {\n                break;\n            }\n        }\n    }\n}\n\nmodule.exports = iterateObject;","\n/**\n * An Array.prototype.slice.call(arguments) alternative\n *\n * @param {Object} args something with a length\n * @param {Number} slice\n * @param {Number} sliceEnd\n * @api public\n */\n\nmodule.exports = function (args, slice, sliceEnd) {\n  var ret = [];\n  var len = args.length;\n\n  if (0 === len) return ret;\n\n  var start = slice < 0\n    ? Math.max(0, slice + len)\n    : slice || 0;\n\n  if (sliceEnd !== undefined) {\n    len = sliceEnd < 0\n      ? sliceEnd + len\n      : sliceEnd\n  }\n\n  while (len-- > start) {\n    ret[len - start] = args[len];\n  }\n\n  return ret;\n}\n\n","\"use strict\";\n\nvar iterateObj = require(\"iterate-object\"),\n    sliced = require(\"sliced\");\n\n/**\n * elly\n * Selects the DOM elements based on the provided selector. If there is no\n * commonjs/module environment, the `$` global variable will be created.\n *\n * @name elly\n * @function\n * @param {String|HTMLElement} input The element selector (e.g.\n * `'#my-id > .my-class'`), the element tag you want to create\n * (e.g. `'<ul>'`) or the HTML element (will be returned by the function).\n * @param {Object|HTMLElement} contextOrAttributes\n * @returns {HTMLElement} The HTMLElement that was provided or selected.\n */\nfunction $(input, contextOrAttributes) {\n    if (typeof input === \"string\") {\n        if (input.charAt(0) === \"<\") {\n            input = document.createElement(input.slice(1, -1));\n            iterateObj(contextOrAttributes || {}, function (value, name) {\n\n                switch (name) {\n                    case \"text\":\n                        input.textContent = value;\n                        return;\n                    case \"html\":\n                        input.innerHTML = value;\n                        return;\n                }\n\n                input.setAttribute(name, value);\n            });\n            return input;\n        } else {\n            contextOrAttributes = contextOrAttributes || document;\n            return contextOrAttributes.querySelector(input);\n        }\n    }\n    return input;\n};\n\n/**\n * elly.$$\n * Selects multiple elements. Note that if there is no commonjs/module environment, you will access this function using `$.$$`.\n *\n * @name elly.$$\n * @function\n * @param {String} selector The DOM query selector.\n * @param {HTMLElement} context The element context/container. Defaults to `document`.\n * @returns {Array} The array of elements.\n */\n$.$$ = function (selector, context) {\n    if (typeof selector === \"string\") {\n        context = context || document;\n        return sliced(context.querySelectorAll(selector));\n    }\n    return [selector];\n};\n\nmodule.exports = $;","\"use strict\";\n\nfunction gen(add) {\n    return function _(d, count, what) {\n        count = add * count;\n        switch (what) {\n            case \"years\":\n            case \"year\":\n                d.setFullYear(d.getFullYear() + count);\n                break;\n            case \"months\":\n            case \"month\":\n                d.setMonth(d.getMonth() + count);\n                break;\n            case \"weeks\":\n            case \"week\":\n                return _(d, count * 7, \"days\");\n                break;\n            case \"days\":\n            case \"day\":\n                d.setDate(d.getDate() + count);\n                break;\n            case \"hours\":\n            case \"hour\":\n                d.setHours(d.getHours() + count);\n                break;\n            case \"minutes\":\n            case \"minute\":\n                d.setMinutes(d.getMinutes() + count);\n                break;\n            case \"seconds\":\n            case \"second\":\n                d.setSeconds(d.getSeconds() + count);\n                break;\n            case \"milliseconds\":\n            case \"millisecond\":\n                d.setMilliseconds(d.getMilliseconds() + count);\n                break;\n            default:\n                throw new Error(\"Invalid range: \" + what);\n        }\n        return d;\n    };\n}\n\nmodule.exports = {\n    add: gen(1),\n    subtract: gen(-1)\n};","/*!\n * months <https://github.com/datetime/months>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n// English Translation\nmodule.exports = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nmodule.exports.abbr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n// Italian Translation\nmodule.exports.it = ['Gennaio', 'Febbraio', 'Marzo', 'Aprile', 'Maggio', 'Giugno', 'Luglio', 'Agosto', 'Settembre', 'Ottobre', 'Novembre', 'Dicembre'];\nmodule.exports.abbr.it = ['Gen', 'Feb', 'Mar', 'Apr', 'Mag', 'Giu', 'Lug', 'Ago', 'Set', 'Ott', 'Nov', 'Dic'];\n\n// German Translation\nmodule.exports.de = [ 'Januar', 'Februar', 'März', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember'];\nmodule.exports.abbr.de = [ 'Jan', 'Feb', 'Mär', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez' ];\n","/*!\n * days <https://github.com/jonschlinkert/days>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n// English\nmodule.exports.en = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nmodule.exports.en.abbr = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nmodule.exports.en.short = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];\n\n// French translation\nmodule.exports.fr = ['dimanche', 'lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi'];\nmodule.exports.fr.abbr = ['dim', 'lun', 'mar', 'mer', 'jeu', 'ven', 'sam'];\nmodule.exports.fr.short = ['di', 'lu', 'ma', 'me', 'je', 've', 'sa'];\n\n// Spanish translation\nmodule.exports.es = ['domingo', 'lunes', 'martes', 'miercoles', 'jueves', 'viernes', 'sabado'];\nmodule.exports.es.abbr = ['dom', 'lun', 'mar', 'mir', 'jue', 'vie', 'sab'];\nmodule.exports.es.short = ['do', 'lu', 'ma', 'mi', 'ju', 'vi', 'sa'];\n\n// Italian translation\nmodule.exports.it = ['Domenica', 'Lunedi', 'Martedi', 'Mercoledi', 'Giovedi', 'Venerdi', 'Sabato'];\nmodule.exports.it.abbr = ['Dom', 'Lun', 'Mar', 'Mer', 'Gio', 'Ven', 'Sab'];\nmodule.exports.it.short = ['D', 'L', 'Ma', 'Me', 'G', 'V', 'S'];\n\n// In order not to break compatibility\nmodule.exports = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nmodule.exports.abbr = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nmodule.exports.short = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];\n","\"use strict\";\n\n/**\n * fillo\n * Fill additional characters at the beginning of the string.\n *\n * @name fillo\n * @function\n * @param {String|Number} what The input snippet (number, string or anything that can be stringified).\n * @param {Number} size The width of the final string (default: `2`).\n * @param {String} ch The character to repeat (default: `\"0\"`).\n * @return {String} The input value with filled characters.\n */\nmodule.exports = function fillo(what, size, ch) {\n  size = size || 2;\n  ch = ch || \"0\";\n  what = what.toString();\n  var howMany = size - what.length;\n  return (howMany <= 0 ? \"\" : ch.repeat(howMany)) + what;\n};","\"use strict\";\n\n/**\n * RegexEscape\n * Escapes a string for using it in a regular expression.\n *\n * @name RegexEscape\n * @function\n * @param {String} input The string that must be escaped.\n * @return {String} The escaped string.\n */\nfunction RegexEscape(input) {\n  return input.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\n\n/**\n * proto\n * Adds the `RegexEscape` function to `RegExp` class.\n *\n * @name proto\n * @function\n * @return {Function} The `RegexEscape` function.\n */\nRegexEscape.proto = function () {\n  RegExp.escape = RegexEscape;\n  return RegexEscape;\n};\n\nmodule.exports = RegexEscape;","\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar regexEscape = require(\"regex-escape\");\n\nvar ParseIt = function () {\n    /**\n     * ParseIt\n     * The `ParseIt` class. It can be used to use the same data object but with different formats/arguments.\n     *\n     * @name ParseIt\n     * @function\n     * @param {Object} obj An object containing the fields to replace.\n     */\n    function ParseIt(obj) {\n        _classCallCheck(this, ParseIt);\n\n        this.obj = obj || {};\n        this.re = new RegExp(\"^(\" + Object.keys(obj).map(regexEscape).join(\"|\") + \")\");\n    }\n\n    /**\n     * run\n     * Replaces the fields in the format string with data coming from the data object.\n     *\n     *\n     * @name parseIt\n     * @function\n     * @param {String} format The format input.\n     * @param {Array} args An array of arguments to be passed to the replace function (stored in the `obj` object).\n     * @return {String} The result as string.\n     */\n\n\n    _createClass(ParseIt, [{\n        key: \"run\",\n        value: function run(format, args) {\n            var result = \"\";\n            args = args || [];\n            do {\n                var arr = format.match(this.re),\n                    field = arr && arr[1],\n                    c = field || format.charAt(0);\n\n                if (field) {\n                    var value = this.obj[field];\n                    if (typeof value === \"function\") {\n                        value = value.apply(this, args);\n                    }\n                    result += value;\n                } else {\n                    result += c;\n                }\n                format = format.substring(c.length);\n            } while (format);\n            return result;\n        }\n    }]);\n\n    return ParseIt;\n}();\n\n/**\n * parseIt\n * A wrapper around the `ParseIt` class. The `ParseIt` constructor is accessible using `parseIt.Parser`.\n *\n * @name parseIt\n * @function\n * @param {String} format The format input.\n * @param {Object} obj An object containing the fields to replace.\n * @param {Array} args An array of arguments to be passed to the replace function (stored in the `obj` object).\n * @return {String} The result as string.\n */\n\n\nfunction parseIt(format, obj, args) {\n    return new ParseIt(obj).run(format, args);\n}\n\nparseIt.Parser = ParseIt;\n\nmodule.exports = parseIt;","\"use strict\";\n\nvar months = require(\"months\"),\n    days = require(\"days\"),\n    fillo = require(\"fillo\"),\n    ParseIt = require(\"parse-it\").Parser;\n\nvar rules = {\n    // Years\n    /// 2015\n    YYYY: function YYYY(i, utc) {\n        if (utc) {\n            return i.getUTCFullYear();\n        }\n        return i.getFullYear();\n    }\n\n    // 15\n    ,\n    YY: function YY(i, utc) {\n        return rules.YYYY(i, utc) % 100;\n    }\n\n    // Months\n    // January\n    ,\n    MMMM: function MMMM(i, utc) {\n        if (utc) {\n            return months[i.getUTCMonth()];\n        }\n        return months[i.getMonth()];\n    }\n\n    // Jan\n    ,\n    MMM: function MMM(i, utc) {\n        if (utc) {\n            return months.abbr[i.getUTCMonth()];\n        }\n        return months.abbr[i.getMonth()];\n    }\n\n    // 01\n    ,\n    MM: function MM(i, utc) {\n        if (utc) {\n            return fillo(i.getUTCMonth() + 1);\n        }\n        return fillo(i.getMonth() + 1);\n    }\n\n    // 1\n    ,\n    M: function M(i, utc) {\n        if (utc) {\n            return i.getUTCMonth() + 1;\n        }\n        return i.getMonth() + 1;\n    }\n\n    // Days\n    // Sunday\n    ,\n    dddd: function dddd(i, utc) {\n        return days[rules.d(i, utc)];\n    }\n\n    // Sun\n    ,\n    ddd: function ddd(i, utc) {\n        return days.abbr[rules.d(i, utc)];\n    }\n\n    // Su\n    ,\n    dd: function dd(i, utc) {\n        return days.short[rules.d(i, utc)];\n    }\n\n    // 0\n    ,\n    d: function d(i, utc) {\n        if (utc) {\n            return i.getUTCDay();\n        }\n        return i.getDay();\n    }\n\n    // Dates\n    // 06  Day in month\n    ,\n    DD: function DD(i, utc) {\n        return fillo(rules.D(i, utc));\n    }\n\n    // 6   Day in month\n    ,\n    D: function D(i, utc) {\n        if (utc) {\n            return i.getUTCDate();\n        }\n        return i.getDate();\n    }\n\n    // AM/PM\n    // AM/PM\n    ,\n    A: function A(i, utc) {\n        return rules.a(i, utc).toUpperCase();\n    }\n\n    // am/pm\n    ,\n    a: function a(i, utc) {\n        return rules.H(i, utc) >= 12 ? \"pm\" : \"am\";\n    }\n\n    // Hours\n    // 08 Hour\n    ,\n    hh: function hh(i, utc) {\n        return fillo(rules.h(i, utc));\n    }\n\n    // 8 Hour\n    ,\n    h: function h(i, utc) {\n        return rules.H(i, utc) % 12 || 12;\n    }\n\n    // (alias)\n    ,\n    HH: function HH(i, utc) {\n        return fillo(rules.H(i, utc));\n    }\n\n    // (alias)\n    ,\n    H: function H(i, utc) {\n        if (utc) {\n            return i.getUTCHours();\n        }\n        return i.getHours();\n    }\n\n    // Minutes\n    // 09 Minute\n    ,\n    mm: function mm(i, utc) {\n        return fillo(rules.m(i, utc));\n    }\n\n    // 9  Minute\n    ,\n    m: function m(i, utc) {\n        if (utc) {\n            return i.getUTCMinutes();\n        }\n        return i.getMinutes();\n    }\n\n    // Seconds\n    // 09 Seconds\n    ,\n    ss: function ss(i, utc) {\n        return fillo(rules.s(i, utc));\n    }\n\n    // 9  Seconds\n    ,\n    s: function s(i, utc) {\n        if (utc) {\n            return i.getUTCSeconds();\n        }\n        return i.getSeconds();\n    }\n\n    // Fractional seconds\n    // 0 1 ... 8 9\n    ,\n    S: function S(i, utc) {\n        return Math.round(rules.s(i, utc) / 60 * 10);\n    },\n    SS: function SS(i, utc) {\n        return fillo(rules.s(i, utc) / 60 * 100);\n    },\n    SSS: function SSS(i, utc) {\n        return fillo(rules.s(i, utc) / 60 * 1000, 3);\n    }\n\n    // Timezones\n    ,\n    Z: function Z(i) {\n        var offset = -i.getTimezoneOffset();\n        return (offset >= 0 ? \"+\" : \"-\") + fillo(parseInt(offset / 60)) + \":\" + fillo(offset % 60);\n    },\n    ZZ: function ZZ(i) {\n        var offset = -i.getTimezoneOffset();\n        return (offset >= 0 ? \"+\" : \"-\") + fillo(parseInt(offset / 60)) + fillo(offset % 60);\n    }\n};\n\nvar parser = new ParseIt(rules);\n\n/**\n * formatoid\n * Formats the date into a given format.\n *\n * Usable format fields:\n *\n *  - **Years**\n *      - `YYYY` (e.g. `\"2015\"`)\n *      - `YY` (e.g. `\"15\"`)\n *  - **Months**\n *      - `MMMM` (e.g. `\"January\"`)\n *      - `MMM` (e.g. `\"Jan\"`)\n *      - `MM` (e.g. `\"01\"`)\n *      - `M` (e.g. `\"1\"`)\n *  - **Days**\n *      - `dddd` (e.g. `\"Sunday\"`)\n *      - `ddd` (e.g. `\"Sun\"`)\n *      - `dd` (e.g. `\"Su\"`)\n *      - `d` (e.g. `\"Su\"`)\n *  - **Dates**\n *      - `DD` (e.g. `\"07\"`)\n *      - `D` (e.g. `\"7\"`)\n *  - **AM/PM**\n *      - `A` (e.g. `\"AM\"`)\n *      - `a` (e.g. `\"pm\"`)\n *  - **Hours**\n *      - `hh` (e.g. `\"07\"`)–12 hour format\n *      - `h` (e.g. `\"7\"`)\n *      - `HH` (e.g. `\"07\"`)–24 hour format\n *      - `H` (e.g. `\"7\"`)\n *  - **Minutes**\n *      - `mm` (e.g. `\"07\"`)\n *      - `m` (e.g. `\"7\"`)\n *  - **Seconds**\n *      - `ss` (e.g. `\"07\"`)\n *      - `s` (e.g. `\"7\"`)\n *  - **Fractional seconds**\n *      - `S` (e.g. `0 1 2 3 ... 9`)\n *      - `SS` (e.g. `00 01 02 ... 98 99`)\n *      - `SS` (e.g. `000 001 002 ... 998 999`)\n *  - **Timezones**\n *      - `Z` (e.g. `-07:00 -06:00 ... +06:00 +07:00`)\n *      - `ZZ` (e.g. `-0700 -0600 ... +0600 +0700`)\n *\n * @name formatoid\n * @function\n * @param {Date} i The date object.\n * @param {String} f The date format.\n * @return {String} The formatted date (as string).\n */\nmodule.exports = function formatoid(i, f) {\n    return parser.run(f, [i, i._useUTC]);\n};","\"use strict\";\n\nvar parse = require(\"github-calendar-parser\"),\n    $ = require(\"elly\"),\n    addSubtractDate = require(\"add-subtract-date\"),\n    formatoid = require(\"formatoid\");\n\nvar DATE_FORMAT1 = \"MMM D, YYYY\",\n    DATE_FORMAT2 = \"MMMM D\";\n\n/**\n * GitHubCalendar\n * Brings the contributions calendar from GitHub (provided username) into your page.\n *\n * @name GitHubCalendar\n * @function\n * @param {String|HTMLElement} container The calendar container (query selector or the element itself).\n * @param {String} username The GitHub username.\n * @param {Object} options An object containing the following fields:\n *\n *    - `summary_text` (String): The text that appears under the calendar (defaults to: `\"Summary of\n *      pull requests, issues opened, and commits made by <username>\"`).\n *    - `proxy` (Function): A function that receives as argument an url (string) and should return the proxied url.\n *      The default is using [@izuzak](https://github.com/izuzak)'s [`urlreq`](https://github.com/izuzak/urlreq).\n *    - `global_stats` (Boolean): If `false`, the global stats (total, longest and current streaks) will not be calculated and displayed. By default this is enabled.\n *    - `responsive` (Boolean): If `true`, the graph is changed to scale with the container. Custom CSS should be applied to the element to scale it appropriately. By default this is disabled.\n *\n * @return {Promise} A promise returned by the `fetch()` call.\n */\nmodule.exports = function GitHubCalendar(container, username, options) {\n\n    container = $(container);\n\n    options = options || {};\n\n    if (options.global_stats === false) {\n        container.style.minHeight = \"175px\";\n    }\n\n    // We need a proxy for CORS\n    // Thanks, @izuzak (https://github.com/izuzak/urlreq)\n    options.proxy = options.proxy || function (url) {\n        return \"https://urlreq.appspot.com/req?method=GET&url=\" + url;\n    };\n\n    var fetchCalendar = function fetchCalendar() {\n        return fetch(options.proxy(\"https://github.com/\" + username)).then(function (response) {\n            return response.text();\n        }).then(function (body) {\n            var div = document.createElement(\"div\");\n            div.innerHTML = body;\n            var cal = div.querySelector(\".js-yearly-contributions\");\n            $(\".position-relative h2\", cal).remove();\n\n            // If 'include-fragment' with spinner img loads instead of the svg, fetchCalendar again\n            if (cal.querySelector(\"include-fragment\")) {\n                setTimeout(fetchCalendar, 500);\n            } else {\n                // If options includes responsive, SVG element has to be manipulated to be made responsive\n                if (options.responsive === true) {\n                    var svg = cal.querySelector(\"svg.js-calendar-graph-svg\");\n                    // Get the width/height properties and use them to create the viewBox\n                    var width = svg.getAttribute(\"width\");\n                    var height = svg.getAttribute(\"height\");\n                    // Remove height property entirely\n                    svg.removeAttribute(\"height\");\n                    // Width property should be set to 100% to fill entire container\n                    svg.setAttribute(\"width\", \"100%\");\n                    // Add a viewBox property based on the former width/height\n                    svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n                }\n\n                container.innerHTML = cal.innerHTML;\n            }\n        }).catch(function (e) {\n            return console.error(e);\n        });\n    };\n\n    return fetchCalendar();\n};","import githubCalendar from 'github-calendar';\r\n\r\nimport '../scss/index.scss';\r\nimport 'github-calendar/dist/github-calendar.css';\r\n\r\nnew githubCalendar('#heatmap-container', 'ParkSB', { summary_text: '@ParkSB', global_stats: false, responsive: true });\r\n"]}