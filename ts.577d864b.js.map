{"version":3,"sources":["../node_modules/iterate-object/lib/index.js","../node_modules/sliced/index.js","../node_modules/elly/lib/index.js","../node_modules/github-calendar/lib/index.js","src/ts/index.ts"],"names":[],"mappings":";AAAA,aAEA,IAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,GAYA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EACA,EAAA,GAEA,GAAA,MAAA,QAAA,GACA,KAAA,EAAA,EAAA,SACA,IAAA,EAAA,EAAA,GAAA,EAAA,KADA,QAKA,GAAA,iBAAA,IAAA,EAAA,YAAA,EAAA,KAAA,OAAA,EAEA,IADA,EAAA,OAAA,KAAA,GACA,EAAA,EAAA,SACA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,KADA,IAQA,OAAA,QAAA;;ACxBA,OAAA,QAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,GACA,EAAA,EAAA,OAEA,GAAA,IAAA,EAAA,OAAA,EAEA,IAAA,EAAA,EAAA,EACA,KAAA,IAAA,EAAA,EAAA,GACA,GAAA,EAQA,SANA,IAAA,IACA,EAAA,EAAA,EACA,EAAA,EACA,GAGA,KAAA,GACA,EAAA,EAAA,GAAA,EAAA,GAGA,OAAA;;AC9BA,aAEA,IAAA,EAAA,QAAA,kBACA,EAAA,QAAA,UAeA,SAAA,EAAA,EAAA,GACA,MAAA,iBAAA,EACA,MAAA,EAAA,OAAA,IACA,EAAA,SAAA,cAAA,EAAA,MAAA,GAAA,IACA,EAAA,GAAA,GAAA,SAAA,EAAA,GAEA,OAAA,GACA,IAAA,OAEA,YADA,EAAA,YAAA,GAEA,IAAA,OAEA,YADA,EAAA,UAAA,GAIA,EAAA,aAAA,EAAA,KAEA,IAEA,EAAA,GAAA,UACA,cAAA,GAGA,EAaA,EAAA,GAAA,SAAA,EAAA,GACA,MAAA,iBAAA,GACA,EAAA,GAAA,SACA,EAAA,EAAA,iBAAA,KAEA,CAAA,IAGA,OAAA,QAAA;;AC9DA,aAEA,IAAA,EAAA,QAAA,QAqBA,OAAA,QAAA,SAAA,EAAA,EAAA,GAEA,EAAA,EAAA,IAIA,KAFA,EAAA,GAAA,IAEA,eACA,EAAA,MAAA,UAAA,SAKA,EAAA,MAAA,EAAA,OAAA,SAAA,GACA,MAAA,iDAAA,GAqCA,OAlCA,SAAA,IACA,OAAA,MAAA,EAAA,MAAA,sBAAA,IAAA,KAAA,SAAA,GACA,OAAA,EAAA,SACA,KAAA,SAAA,GACA,IAAA,EAAA,SAAA,cAAA,OACA,EAAA,UAAA,EACA,IAAA,EAAA,EAAA,cAAA,4BAIA,GAHA,EAAA,wBAAA,GAAA,SAGA,EAAA,cAAA,oBACA,WAAA,EAAA,SACA,CAEA,IAAA,IAAA,EAAA,WAAA,CACA,IAAA,EAAA,EAAA,cAAA,6BAEA,EAAA,EAAA,aAAA,SACA,EAAA,EAAA,aAAA,UAEA,EAAA,gBAAA,UAEA,EAAA,aAAA,QAAA,QAEA,EAAA,aAAA,UAAA,OAAA,EAAA,IAAA,GAGA,EAAA,UAAA,EAAA,aAEA,MAAA,SAAA,GACA,OAAA,QAAA,MAAA,KAIA;;;;ACpEA,aAAA,IAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,QAAA,YAAA,EALA,IAAA,EAAA,EAAA,QAAA,oBAEA,QAAA,sBACA,QAAA,4CAEA,IAAI,EAAA,QAAe,qBAAsB,SAAU,CAAE,aAAc,UAAW,cAAc,EAAO,YAAY","file":"ts.577d864b.js","sourceRoot":"../app","sourcesContent":["\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * iterateObject\n * Iterates an object. Note the object field order may differ.\n *\n * @name iterateObject\n * @function\n * @param {Object} obj The input object.\n * @param {Function} fn A function that will be called with the current value, field name and provided object.\n * @return {Function} The `iterateObject` function.\n */\nfunction iterateObject(obj, fn) {\n    var i = 0,\n        keys = [];\n\n    if (Array.isArray(obj)) {\n        for (; i < obj.length; ++i) {\n            if (fn(obj[i], i, obj) === false) {\n                break;\n            }\n        }\n    } else if ((typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj)) === \"object\" && obj !== null) {\n        keys = Object.keys(obj);\n        for (; i < keys.length; ++i) {\n            if (fn(obj[keys[i]], keys[i], obj) === false) {\n                break;\n            }\n        }\n    }\n}\n\nmodule.exports = iterateObject;","\n/**\n * An Array.prototype.slice.call(arguments) alternative\n *\n * @param {Object} args something with a length\n * @param {Number} slice\n * @param {Number} sliceEnd\n * @api public\n */\n\nmodule.exports = function (args, slice, sliceEnd) {\n  var ret = [];\n  var len = args.length;\n\n  if (0 === len) return ret;\n\n  var start = slice < 0\n    ? Math.max(0, slice + len)\n    : slice || 0;\n\n  if (sliceEnd !== undefined) {\n    len = sliceEnd < 0\n      ? sliceEnd + len\n      : sliceEnd\n  }\n\n  while (len-- > start) {\n    ret[len - start] = args[len];\n  }\n\n  return ret;\n}\n\n","\"use strict\";\n\nvar iterateObj = require(\"iterate-object\"),\n    sliced = require(\"sliced\");\n\n/**\n * elly\n * Selects the DOM elements based on the provided selector. If there is no\n * commonjs/module environment, the `$` global variable will be created.\n *\n * @name elly\n * @function\n * @param {String|HTMLElement} input The element selector (e.g.\n * `'#my-id > .my-class'`), the element tag you want to create\n * (e.g. `'<ul>'`) or the HTML element (will be returned by the function).\n * @param {Object|HTMLElement} contextOrAttributes\n * @returns {HTMLElement} The HTMLElement that was provided or selected.\n */\nfunction $(input, contextOrAttributes) {\n    if (typeof input === \"string\") {\n        if (input.charAt(0) === \"<\") {\n            input = document.createElement(input.slice(1, -1));\n            iterateObj(contextOrAttributes || {}, function (value, name) {\n\n                switch (name) {\n                    case \"text\":\n                        input.textContent = value;\n                        return;\n                    case \"html\":\n                        input.innerHTML = value;\n                        return;\n                }\n\n                input.setAttribute(name, value);\n            });\n            return input;\n        } else {\n            contextOrAttributes = contextOrAttributes || document;\n            return contextOrAttributes.querySelector(input);\n        }\n    }\n    return input;\n};\n\n/**\n * elly.$$\n * Selects multiple elements. Note that if there is no commonjs/module environment, you will access this function using `$.$$`.\n *\n * @name elly.$$\n * @function\n * @param {String} selector The DOM query selector.\n * @param {HTMLElement} context The element context/container. Defaults to `document`.\n * @returns {Array} The array of elements.\n */\n$.$$ = function (selector, context) {\n    if (typeof selector === \"string\") {\n        context = context || document;\n        return sliced(context.querySelectorAll(selector));\n    }\n    return [selector];\n};\n\nmodule.exports = $;","\"use strict\";\n\nvar $ = require(\"elly\");\n\n/**\n * GitHubCalendar\n * Brings the contributions calendar from GitHub (provided username) into your page.\n *\n * @name GitHubCalendar\n * @function\n * @param {String|HTMLElement} container The calendar container (query selector or the element itself).\n * @param {String} username The GitHub username.\n * @param {Object} options An object containing the following fields:\n *\n *    - `summary_text` (String): The text that appears under the calendar (defaults to: `\"Summary of\n *      pull requests, issues opened, and commits made by <username>\"`).\n *    - `proxy` (Function): A function that receives as argument an url (string) and should return the proxied url.\n *      The default is using [@izuzak](https://github.com/izuzak)'s [`urlreq`](https://github.com/izuzak/urlreq).\n *    - `global_stats` (Boolean): If `false`, the global stats (total, longest and current streaks) will not be calculated and displayed. By default this is enabled.\n *    - `responsive` (Boolean): If `true`, the graph is changed to scale with the container. Custom CSS should be applied to the element to scale it appropriately. By default this is disabled.\n *\n * @return {Promise} A promise returned by the `fetch()` call.\n */\nmodule.exports = function GitHubCalendar(container, username, options) {\n\n    container = $(container);\n\n    options = options || {};\n\n    if (options.global_stats === false) {\n        container.style.minHeight = \"175px\";\n    }\n\n    // We need a proxy for CORS\n    // Thanks, @izuzak (https://github.com/izuzak/urlreq)\n    options.proxy = options.proxy || function (url) {\n        return \"https://urlreq.appspot.com/req?method=GET&url=\" + url;\n    };\n\n    var fetchCalendar = function fetchCalendar() {\n        return fetch(options.proxy(\"https://github.com/\" + username)).then(function (response) {\n            return response.text();\n        }).then(function (body) {\n            var div = document.createElement(\"div\");\n            div.innerHTML = body;\n            var cal = div.querySelector(\".js-yearly-contributions\");\n            $(\".position-relative h2\", cal).remove();\n\n            // If 'include-fragment' with spinner img loads instead of the svg, fetchCalendar again\n            if (cal.querySelector(\"include-fragment\")) {\n                setTimeout(fetchCalendar, 500);\n            } else {\n                // If options includes responsive, SVG element has to be manipulated to be made responsive\n                if (options.responsive === true) {\n                    var svg = cal.querySelector(\"svg.js-calendar-graph-svg\");\n                    // Get the width/height properties and use them to create the viewBox\n                    var width = svg.getAttribute(\"width\");\n                    var height = svg.getAttribute(\"height\");\n                    // Remove height property entirely\n                    svg.removeAttribute(\"height\");\n                    // Width property should be set to 100% to fill entire container\n                    svg.setAttribute(\"width\", \"100%\");\n                    // Add a viewBox property based on the former width/height\n                    svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n                }\n\n                container.innerHTML = cal.innerHTML;\n            }\n        }).catch(function (e) {\n            return console.error(e);\n        });\n    };\n\n    return fetchCalendar();\n};","import githubCalendar from 'github-calendar';\n\nimport '../scss/index.scss';\nimport 'github-calendar/dist/github-calendar.css';\n\nnew githubCalendar('#heatmap-container', 'ParkSB', { summary_text: '@ParkSB', global_stats: false, responsive: true });\n"]}